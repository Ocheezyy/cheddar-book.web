/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PricingIndexImport } from './routes/pricing/index'
import { Route as HowItWorksIndexImport } from './routes/how-it-works/index'
import { Route as ForBusinessesIndexImport } from './routes/for-businesses/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PricingIndexRoute = PricingIndexImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => rootRoute,
} as any)

const HowItWorksIndexRoute = HowItWorksIndexImport.update({
  id: '/how-it-works/',
  path: '/how-it-works/',
  getParentRoute: () => rootRoute,
} as any)

const ForBusinessesIndexRoute = ForBusinessesIndexImport.update({
  id: '/for-businesses/',
  path: '/for-businesses/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/for-businesses/': {
      id: '/for-businesses/'
      path: '/for-businesses'
      fullPath: '/for-businesses'
      preLoaderRoute: typeof ForBusinessesIndexImport
      parentRoute: typeof rootRoute
    }
    '/how-it-works/': {
      id: '/how-it-works/'
      path: '/how-it-works'
      fullPath: '/how-it-works'
      preLoaderRoute: typeof HowItWorksIndexImport
      parentRoute: typeof rootRoute
    }
    '/pricing/': {
      id: '/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/for-businesses': typeof ForBusinessesIndexRoute
  '/how-it-works': typeof HowItWorksIndexRoute
  '/pricing': typeof PricingIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/for-businesses': typeof ForBusinessesIndexRoute
  '/how-it-works': typeof HowItWorksIndexRoute
  '/pricing': typeof PricingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/for-businesses/': typeof ForBusinessesIndexRoute
  '/how-it-works/': typeof HowItWorksIndexRoute
  '/pricing/': typeof PricingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/for-businesses' | '/how-it-works' | '/pricing'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/for-businesses' | '/how-it-works' | '/pricing'
  id: '__root__' | '/' | '/for-businesses/' | '/how-it-works/' | '/pricing/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForBusinessesIndexRoute: typeof ForBusinessesIndexRoute
  HowItWorksIndexRoute: typeof HowItWorksIndexRoute
  PricingIndexRoute: typeof PricingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForBusinessesIndexRoute: ForBusinessesIndexRoute,
  HowItWorksIndexRoute: HowItWorksIndexRoute,
  PricingIndexRoute: PricingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/for-businesses/",
        "/how-it-works/",
        "/pricing/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/for-businesses/": {
      "filePath": "for-businesses/index.tsx"
    },
    "/how-it-works/": {
      "filePath": "how-it-works/index.tsx"
    },
    "/pricing/": {
      "filePath": "pricing/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
